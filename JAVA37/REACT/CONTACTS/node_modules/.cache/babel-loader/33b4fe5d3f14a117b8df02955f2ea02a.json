{"ast":null,"code":"var _jsxFileName = \"/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/src/components/login-component/login.js\";\nimport React from 'react';\nimport classes from '../login-component/login.module.css';\nimport { Context } from '../../App';\nimport { withRouter } from 'react-router-dom';\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: '',\n      password: '',\n      isHidden: true\n    };\n\n    this.signIn = (email, password, setErr, setToken, setLoading) => {\n      const auth = {\n        email,\n        password\n      };\n      const request = JSON.stringify(auth);\n      setLoading();\n      return fetch(`${BASE_URL}/api/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: request\n      }).then(response => {\n        if (response.ok) {\n          console.log('SIGNIN STATUS:', response.status);\n          response.json().then(response => {\n            console.log(response.token);\n            localStorage.setItem(\"token\", response.token);\n            this.props.history.push('./contacts');\n            setToken(response.token);\n          });\n        } else {\n          console.log(response.status);\n          setErr(`Login Failed with code ${response.status}`, this.defineStatusCode(response.status));\n        }\n      }).catch(err => {\n        setErr(err.message);\n      });\n    };\n\n    this.registration = (email, password, setErr, setToken, setLoading) => {\n      const auth = {\n        email,\n        password\n      };\n      const requestBody = JSON.stringify(auth);\n      setLoading();\n      return fetch(`${BASE_URL}/api/registration`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: requestBody\n      }).then(response => {\n        if (response.ok) {\n          console.log('REGISTRATION STATUS: ', response.status);\n          response.json().then(response => {\n            console.log(\"REG OK\");\n            localStorage.setItem(\"token\", response.token);\n            this.props.history.push('./contacts');\n            setToken(response.token);\n          });\n        } else {\n          console.log(response.status);\n          setErr(`Registration failed with code ${response.status}`, this.defineStatusCode(response.status));\n        }\n      }).catch(err => {\n        setErr(err.message);\n      });\n    };\n\n    this.defineStatusCode = code => {\n      switch (code) {\n        case 400:\n          return `Wrong email or password format\n            Email must contains one @ and minimum 2 symbols after last dot\n            Password must contain at least one uppercase letter!\n            Password must contain at least one lowercase letter!\n            Password must contain at least one digit!\n            Password must contain at least one special symbol from [‘$’,’~’,’-‘,’_’]!`;\n\n        case 409:\n          return `User already exist`;\n\n        case 401:\n          return `Wrong email or password`;\n\n        default:\n          return `Undefined Error ${code}`;\n      }\n    };\n\n    this.show = () => {\n      this.setState({ ...this.state,\n        isHidden: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('token')) {\n      this.props.history.push('/contacts');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, obj => {\n      return !obj.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, obj.error ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\",\n          marginBottom: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, obj.error) : null, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          console.log(e.submitter);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"email\",\n        placeholder: \"Email\",\n        className: classes.first_input,\n        value: this.state.login,\n        onChange: e => {\n          this.setState({ ...this.state,\n            login: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: e => {\n          this.setState({ ...this.state,\n            password: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }, \"Registration\"))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, \"LOADING...\");\n    });\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/src/components/login-component/login.js"],"names":["React","classes","Context","withRouter","BASE_URL","Login","Component","state","login","password","isHidden","signIn","email","setErr","setToken","setLoading","auth","request","JSON","stringify","fetch","method","headers","body","then","response","ok","console","log","status","json","token","localStorage","setItem","props","history","push","defineStatusCode","catch","err","message","registration","requestBody","code","show","setState","componentDidMount","getItem","render","obj","isLoading","error","color","textAlign","marginBottom","e","preventDefault","submitter","first_input","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classes from '../login-component/login.module.css';\nimport {Context} from '../../App';\nimport {withRouter} from 'react-router-dom';\n\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass Login extends React.Component{\n    state = {\n        login:'',\n        password:'',\n        isHidden: true\n    }\n\n    componentDidMount(){\n        if(localStorage.getItem('token')){ \n            this.props.history.push('/contacts');\n        }\n    }\n\n\n    signIn = (email, password, setErr, setToken, setLoading) => {\n        const auth = {email,password};\n        const request = JSON.stringify(auth);\n        setLoading();\n        return fetch(`${BASE_URL}/api/login`, {\n            method:'POST',\n            headers:{'Content-Type':'application/json; charset=utf-8'},\n            body:request\n        }).then(response => {\n            if(response.ok){\n                console.log('SIGNIN STATUS:', response.status);\n                response.json().then((response) => {\n                  console.log(response.token);\n                  localStorage.setItem(\"token\", response.token);\n                  this.props.history.push('./contacts');\n                  setToken(response.token);\n                })\n            }else{\n                console.log(response.status);\n                setErr(`Login Failed with code ${response.status}`, this.defineStatusCode(response.status));\n            }   \n        }).catch(err => {\n            setErr(err.message);\n        });\n    }\n\n    registration = (email, password, setErr, setToken, setLoading) => {\n        const auth = {email,password};\n        const requestBody = JSON.stringify(auth);\n        setLoading();\n        return fetch(`${BASE_URL}/api/registration`,{\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json; charset=utf-8'\n            },\n            body:requestBody\n        }).then(response => {\n            if(response.ok){\n                console.log('REGISTRATION STATUS: ', response.status);\n                response.json().then((response) => {\n                    console.log(\"REG OK\");\n                    localStorage.setItem(\"token\", response.token);\n                    this.props.history.push('./contacts');\n                    setToken(response.token);\n                })   \n            }else{\n                console.log(response.status);\n                setErr(`Registration failed with code ${response.status}`, this.defineStatusCode(response.status));\n            }}).catch(err => {\n                setErr(err.message);\n        });\n    }\n\n    defineStatusCode = (code) => {\n        switch(code){\n            case 400: return `Wrong email or password format\n            Email must contains one @ and minimum 2 symbols after last dot\n            Password must contain at least one uppercase letter!\n            Password must contain at least one lowercase letter!\n            Password must contain at least one digit!\n            Password must contain at least one special symbol from [‘$’,’~’,’-‘,’_’]!`;\n            case 409: return `User already exist`;\n            case 401: return `Wrong email or password`;\n            default: return `Undefined Error ${code}`\n        }\n    }\n\n    show = () => {\n        this.setState({...this.state, isHidden: false});\n    }\n\n    render(){\n        return(\n            <Context.Consumer>\n                {\n                    obj => {\n                        return(\n                            !obj.isLoading ?\n                            <div className={classes.login}>\n                                { obj.error \n                                ? \n                                <div style={{color: \"red\", textAlign:\"center\", marginBottom: \"10px\"}}>\n                                    {obj.error}\n                                </div> \n                                :\n                                 null}\n                                <form onSubmit={e => {\n                                    e.preventDefault();\n                                    console.log(e.submitter);\n                                }}>\n                                    <input name=\"email\" placeholder='Email' className={classes.first_input} value={this.state.login} onChange={(e) => {this.setState({...this.state, login:e.target.value})}}/>\n                                    <input name=\"password\" placeholder='Password' value={this.state.password} onChange={(e) => {this.setState({...this.state, password:e.target.value})}}/>\n                                    <br />\n                                    <button type=\"submit\">Login</button>\n                                    <button>Registration</button>\n                                    {/* <button onClick={() => {this.signIn(this.state.login, this.state.password, obj.setError, obj.updatetoken, obj.setLoading)}}> Login</button>\n                                    <button onClick={() => {this.registration(this.state.login, this.state.password, obj.setError, obj.updatetoken, obj.setLoading)}}> Registration</button> */}\n                                </form>\n                            </div>\n\n                            :\n                            <div className={classes.login}>LOADING...</div>\n                        );\n                    }\n                }\n            </Context.Consumer>\n        );\n    }\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}