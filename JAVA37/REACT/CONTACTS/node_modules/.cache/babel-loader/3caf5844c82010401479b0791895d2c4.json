{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { NavLink, Route, Switch, Router } from 'react-router-dom';\nimport Home from './components/home-component/home';\nimport About from './components/about-component/about';\nimport Login from './components/login-component/login';\nimport Contacts from './components/contact-page-component/contact-page';\nimport NavBarComponent from './components/navbar-component/navbar-component';\nimport NavBarLogged from './components/navbar-logged-component/navbar-logged';\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\nexport const Context = React.createContext();\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaderShow: false,\n      contacts: [],\n      token: ''\n    };\n\n    this.updateToken = token => {\n      this.setState({ ...this.state,\n        token: token\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('APP MOUNTED');\n\n    if (localStorage.getItem('token')) {\n      let new_contacts = this.getAllContacts(localStorage.getItem('token'));\n      console.log('CONTACTS:', new_contacts);\n      this.setState({ ...this.state,\n        contacts: new_contacts,\n        token: localStorage.getItem('token')\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Context.Provider, {\n      value: {\n        token: this.state.token,\n        updatecontacts: this.updateContacts,\n        contacts: this.state.contacts,\n        updatetoken: this.updateToken,\n        deleteAllcontacts: this.deleteAllContacts,\n        updateContact: this.updateContact,\n        getAllContacts: this.getAllContacts,\n        deleteById: this.deleteById,\n        addContact: this.addContact,\n        checkStorage: this.checkStorage\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, this.state.token ? /*#__PURE__*/React.createElement(NavBarLogged, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(NavBarComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/contacts\",\n      component: Contacts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/App.js"],"names":["React","NavLink","Route","Switch","Router","Home","About","Login","Contacts","NavBarComponent","NavBarLogged","BASE_URL","Context","createContext","App","Component","state","loaderShow","contacts","token","updateToken","setState","componentDidMount","console","log","localStorage","getItem","new_contacts","getAllContacts","render","updatecontacts","updateContacts","updatetoken","deleteAllcontacts","deleteAllContacts","updateContact","deleteById","addContact","checkStorage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {NavLink,Route, Switch, Router} from 'react-router-dom';\n\nimport Home from './components/home-component/home';\nimport About from './components/about-component/about';\nimport Login from './components/login-component/login';\nimport Contacts from './components/contact-page-component/contact-page';\n\nimport NavBarComponent from './components/navbar-component/navbar-component';\nimport NavBarLogged from './components/navbar-logged-component/navbar-logged';\n\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\nexport const Context = React.createContext();\n\nexport default class App extends React.Component{\n  state = {\n    loaderShow: false,\n    contacts:[],\n    token:''\n  }\n\n  componentDidMount(){\n    console.log('APP MOUNTED');\n    if(localStorage.getItem('token')){\n      let new_contacts = this.getAllContacts(localStorage.getItem('token'));\n      console.log('CONTACTS:', new_contacts);\n      this.setState({...this.state, contacts:new_contacts, token:localStorage.getItem('token')});\n    }\n  }\n  updateToken = (token) => {\n    this.setState({...this.state, token:token});\n  }\n \n  render(){\n    return(\n      <>\n          <Context.Provider value={{token:this.state.token, updatecontacts:this.updateContacts ,contacts:this.state.contacts, updatetoken:this.updateToken , deleteAllcontacts:this.deleteAllContacts, updateContact:this.updateContact, getAllContacts:this.getAllContacts, deleteById:this.deleteById, addContact:this.addContact, checkStorage:this.checkStorage}}>\n            {this.state.token ? <NavBarLogged /> : <NavBarComponent/>}      \n              <Switch>\n                <Route path='/' exact component={Home} />\n                <Route path='/about' component={About} />\n                <Route path='/login' component={Login} />\n                <Route path='/contacts' component={Contacts} />\n              </Switch>\n          </Context.Provider>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}