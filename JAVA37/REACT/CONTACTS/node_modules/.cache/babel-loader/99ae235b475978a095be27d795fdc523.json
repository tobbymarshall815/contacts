{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/components_new/post-page/post-page.js\";\nimport React from 'react';\nimport { Contextt } from '../../App';\nimport classes from '../post-page/post-page.module.css';\nimport Postinfo from '../postinfo/postinfo';\nimport Postcomments from '../postcomments/postcomments';\nimport Commentinput from '../comment-input/comment-input';\nexport default (props => {\n  let corrent_id = props.match.params.id;\n  return /*#__PURE__*/React.createElement(Contextt.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, obj => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Postinfo, {\n      id: obj.posts[corrent_id].postId,\n      author: obj.posts[corrent_id].author,\n      date: obj.posts[corrent_id].date,\n      disc: obj.posts[corrent_id].content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, \"Comments\"), obj.posts[corrent_id].comments.map((e, i) => /*#__PURE__*/React.createElement(Postcomments, {\n      key: i,\n      author: e.author,\n      text: e.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(Commentinput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }));\n  });\n});","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/components_new/post-page/post-page.js"],"names":["React","Contextt","classes","Postinfo","Postcomments","Commentinput","props","corrent_id","match","params","id","obj","posts","postId","author","date","content","comments","map","e","i","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,gBAAgBC,KAAD,IAAW;AACtB,MAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAApC;AACA,sBACI,oBAAC,QAAD,CAAU,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESC,GAAD,IAAS;AACL,wBAAO,uDACH,oBAAC,QAAD;AACI,MAAA,EAAE,EAAEA,GAAG,CAACC,KAAJ,CAAUL,UAAV,EAAsBM,MAD9B;AAEI,MAAA,MAAM,EAAEF,GAAG,CAACC,KAAJ,CAAUL,UAAV,EAAsBO,MAFlC;AAGI,MAAA,IAAI,EAAEH,GAAG,CAACC,KAAJ,CAAUL,UAAV,EAAsBQ,IAHhC;AAII,MAAA,IAAI,EAAEJ,GAAG,CAACC,KAAJ,CAAUL,UAAV,EAAsBS,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPG,EAQFL,GAAG,CAACC,KAAJ,CAAUL,UAAV,EAAsBU,QAAtB,CAA+BC,GAA/B,CAAmC,CAACC,CAAD,EAAIC,CAAJ,kBAAW,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAnB;AAAsB,MAAA,MAAM,EAAED,CAAC,CAACL,MAAhC;AAAwC,MAAA,IAAI,EAAEK,CAAC,CAACE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,CARE,eASH,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATG,CAAP;AAYH,GAfT,CADJ;AAoBH,CAtBD","sourcesContent":["import React from 'react';\nimport { Contextt } from '../../App';\nimport classes from '../post-page/post-page.module.css';\nimport Postinfo from '../postinfo/postinfo';\nimport Postcomments from '../postcomments/postcomments';\nimport Commentinput from '../comment-input/comment-input';\n\nexport default (props) => {\n    let corrent_id = props.match.params.id;\n    return(\n        <Contextt.Consumer>\n            {\n                (obj) => {\n                    return(<>\n                        <Postinfo  \n                            id={obj.posts[corrent_id].postId}\n                            author={obj.posts[corrent_id].author}\n                            date={obj.posts[corrent_id].date}\n                            disc={obj.posts[corrent_id].content}\n                        />\n                        <h2>Comments</h2>\n                        {obj.posts[corrent_id].comments.map((e, i) =>  <Postcomments key={i} author={e.author} text={e.text}/>)}\n                        <Commentinput/>\n                        </>\n                    );\n                }\n            }\n        </Contextt.Consumer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}