{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/components/contact-page-component/contact-page.js\";\nimport React from 'react';\nimport { withRouter, Route } from 'react-router-dom';\nimport { Context } from '../../App';\nimport ContactItemDetailed from '../contact-item-detailed-component/contact-item-detailed';\nimport Contactitem from '../contact-item-component/contact-item';\nimport classes from '../contact-page-component/contact-page.module.css';\nimport contactItemDetailed from '../contact-item-detailed-component/contact-item-detailed';\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      fetching: true\n    };\n\n    this.deleteById = (token, id, id2) => {\n      return fetch(`${BASE_URL}/api/contact/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: token\n        }\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(response => {\n            this.props.history.push('/contacts');\n            this.getAllContacts;\n          });\n        } else {\n          throw new Error(response.status);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('token')) {\n      this.props.history.push('/login');\n    } else {\n      this.getAllContacts(localStorage.getItem('token'));\n    }\n  }\n\n  getAllContacts(token) {\n    return fetch(`${BASE_URL}/api/contact`, {\n      method: 'GET',\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(response => {\n          console.log('GETALLCONTACTS: ', response.contacts);\n          this.setState({\n            contacts: [...response.contacts],\n            fetching: false\n          });\n        });\n      } else {\n        throw new Error(response.status);\n      }\n    });\n  }\n\n  render() {\n    if (this.state.contacts.length === 0 && this.state.fetching) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"No contacts here!\");\n    }\n\n    if (!this.state.fetching) {\n      console.log('render: ', this.state.contacts);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.contactspage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.leftdiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, this.state.contacts.map((contact, index) => {\n        return /*#__PURE__*/React.createElement(Contactitem, {\n          key: index,\n          id: index,\n          name: contact.name,\n          lastname: contact.lastname,\n          phone: contact.phone,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.rightdiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/contacts/:id\",\n        render: props => {\n          return /*#__PURE__*/React.createElement(ContactItemDetailed, Object.assign({}, props, {\n            contacts: this.state.contacts,\n            deleteById: this.deleteById,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 81\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nexport default withRouter(ContactPage);","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/components/contact-page-component/contact-page.js"],"names":["React","withRouter","Route","Context","ContactItemDetailed","Contactitem","classes","contactItemDetailed","BASE_URL","ContactPage","Component","constructor","props","state","contacts","fetching","deleteById","token","id","id2","fetch","method","headers","Authorization","then","response","ok","json","history","push","getAllContacts","Error","status","componentDidMount","localStorage","getItem","console","log","setState","render","length","contactspage","leftdiv","map","contact","index","name","lastname","phone","rightdiv"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {withRouter, Route} from 'react-router-dom';\nimport { Context } from '../../App';\n\nimport ContactItemDetailed from '../contact-item-detailed-component/contact-item-detailed';\nimport Contactitem from '../contact-item-component/contact-item';\nimport classes from '../contact-page-component/contact-page.module.css';\nimport contactItemDetailed from '../contact-item-detailed-component/contact-item-detailed';\n\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass ContactPage extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        contacts: [],\n        fetching:true\n    }\n\n    componentDidMount(){\n        if(!localStorage.getItem('token')){ \n            this.props.history.push('/login');\n        }else{\n            this.getAllContacts(localStorage.getItem('token'));\n        }\n    }\n\n    getAllContacts(token){\n        return fetch(`${BASE_URL}/api/contact`,{\n            method:'GET',\n            headers:{\n                Authorization:token\n            }\n        }).then(response => {\n            if(response.ok){\n                response.json().then((response) => {\n                    console.log('GETALLCONTACTS: ', response.contacts);\n                    this.setState({contacts:[...response.contacts], fetching:false});\n                })\n            }else{\n                throw new Error(response.status);\n            }\n        });\n    }\n\n    deleteById = (token, id, id2) => {\n        return fetch(`${BASE_URL}/api/contact/${id}`,{\n            method: 'DELETE',\n            headers: {\n                Authorization:token\n            }\n        }).then(response => {\n            if(response.ok){\n                \n                response.json().then((response) => {\n                    this.props.history.push('/contacts');\n                    this.getAllContacts\n                })\n                \n            }else{\n                throw new Error(response.status);\n            }\n            \n        });\n    }\n\n    render(){\n        if(this.state.contacts.length === 0 && this.state.fetching){\n            return (<div>No contacts here!</div>);\n        }\n        if(!this.state.fetching){\n            console.log('render: ', this.state.contacts);\n            return(\n                <div className={classes.contactspage}>\n                    <div className={classes.leftdiv}>\n                        {this.state.contacts.map((contact, index) => {\n                            return (<Contactitem key={index} id={index} name={contact.name} lastname={contact.lastname} phone={contact.phone}/>);\n                        })}\n                    </div>\n                    <div className={classes.rightdiv}>\n                        <Route path='/contacts/:id' render={(props) => { return <ContactItemDetailed {...props} contacts={this.state.contacts} deleteById={this.deleteById}/>}}/>\n                    </div>\n                </div>\n            );\n        }else{\n            return(<div>Loading...</div>);\n        }\n    }\n}\n\nexport default withRouter(ContactPage);"]},"metadata":{},"sourceType":"module"}