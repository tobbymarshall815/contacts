{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/components/contact-page-component/contact-page.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Context } from '../../App';\nimport Contactitem from '../contact-item-component/contact-item';\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nfunction getAllContacts(token) {\n  return fetch(`${BASE_URL}/api/contact`, {\n    method: 'GET',\n    headers: {\n      Authorization: token\n    }\n  }).then(response => {\n    if (response.ok) {\n      response.json().then(response => {\n        console.log('GETALLCONTACTS: ', response.contacts);\n        return response.contacts;\n      });\n    } else {\n      throw new Error(response.status);\n    }\n  });\n}\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: []\n    };\n\n    this.getAllContacts = token => {\n      return fetch(`${BASE_URL}/api/contact`, {\n        method: 'GET',\n        headers: {\n          Authorization: token\n        }\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(response => {\n            console.log('GETALLCONTACTS: ', response.contacts);\n            return response.contacts;\n          });\n        } else {\n          throw new Error(response.status);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('token')) {\n      this.props.history.push('/login');\n    } else {\n      console.log('CONTACT PAGE GOT TOKEN');\n      let new_contacts = getAllContacts(localStorage.getItem('token'));\n      console.log(new_contacts);\n      this.setState({\n        contacts: new_contacts\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.state.contacts.map((contact, index) => {\n      return /*#__PURE__*/React.createElement(Contactitem, {\n        key: index,\n        id: contact.id,\n        name: contact.item,\n        phone: contact.phone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      });\n    }), \";\");\n  }\n\n}\n\nexport default withRouter(ContactPage);","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/components/contact-page-component/contact-page.js"],"names":["React","withRouter","Context","Contactitem","BASE_URL","getAllContacts","token","fetch","method","headers","Authorization","then","response","ok","json","console","log","contacts","Error","status","ContactPage","Component","constructor","props","state","componentDidMount","localStorage","getItem","history","push","new_contacts","setState","render","map","contact","index","id","item","phone"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Context } from '../../App';\nimport Contactitem from '../contact-item-component/contact-item';\n\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nfunction getAllContacts(token){\n    return fetch(`${BASE_URL}/api/contact`,{\n        method:'GET',\n        headers:{\n            Authorization:token\n        }\n    }).then(response => {\n        if(response.ok){\n            response.json().then((response) => {\n                console.log('GETALLCONTACTS: ', response.contacts);\n                return response.contacts;\n            })\n        }else{\n            throw new Error(response.status);\n        }\n    });\n}\n\nclass ContactPage extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        contacts: []\n    }\n\n    componentDidMount(){\n        if(!localStorage.getItem('token')){\n            \n            this.props.history.push('/login');\n        }else{\n            console.log('CONTACT PAGE GOT TOKEN');\n            let new_contacts = getAllContacts(localStorage.getItem('token'));\n            console.log(new_contacts);\n            this.setState({contacts: new_contacts});\n        }\n    }\n\n    getAllContacts = (token) => {\n        return fetch(`${BASE_URL}/api/contact`,{\n            method:'GET',\n            headers:{\n                Authorization:token\n            }\n        }).then(response => {\n            if(response.ok){\n                response.json().then((response) => {\n                    console.log('GETALLCONTACTS: ', response.contacts);\n                    return response.contacts;\n                })\n            }else{\n                throw new Error(response.status);\n            }\n        });\n    }\n\n    render(){\n        return(\n            <div>\n                {this.state.contacts.map((contact, index) => {\n                    return (<Contactitem key={index} id={contact.id} name={contact.item} phone={contact.phone}/>);\n                })};\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ContactPage);"]},"metadata":{},"sourceType":"module"}