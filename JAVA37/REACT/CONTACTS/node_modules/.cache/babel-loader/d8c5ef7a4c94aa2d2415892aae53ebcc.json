{"ast":null,"code":"import _toConsumableArray from\"/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{withRouter,Route}from'react-router-dom';import ContactItemDetailed from'../contact-item-detailed-component/contact-item-detailed';import Contactitem from'../contact-item-component/contact-item';import classes from'../contact-page-component/contact-page.module.css';var BASE_URL='https://contacts-telran.herokuapp.com';var ContactPage=/*#__PURE__*/function(_React$Component){_inherits(ContactPage,_React$Component);var _super=_createSuper(ContactPage);function ContactPage(){var _this;_classCallCheck(this,ContactPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={contacts:[],fetching:true};_this.deleteById=function(token,id){return fetch(\"\".concat(BASE_URL,\"/api/contact/\").concat(id),{method:'DELETE',headers:{Authorization:token}}).then(function(response){if(response.ok){response.json().then(function(response){_this.props.history.push('/contacts');_this.getAllContacts(token);});}else{_this.props.history.push('/contacts');console.log(response.code);}});};_this.updateContact=function(token,contact,id){var req=JSON.stringify(contact);console.log('UPDATE CONTACT:',req);return fetch(\"\".concat(BASE_URL,\"/api/contact\"),{method:\"PUT\",headers:{'Content-Type':'application/json; charset=utf-8',Authorization:token},body:req}).then(function(response){if(response.ok){console.log('CONTACT UPDATED!',response.status);_this.props.history.push(\"/contacts/\".concat(id));_this.getAllContacts(token);}else{console.log(response.code);}});};return _this;}_createClass(ContactPage,[{key:\"componentDidMount\",value:function componentDidMount(){if(!localStorage.getItem('token')){this.props.history.push('/login');}else{this.getAllContacts(localStorage.getItem('token'));}}},{key:\"getAllContacts\",value:function getAllContacts(token){var _this2=this;return fetch(\"\".concat(BASE_URL,\"/api/contact\"),{method:'GET',headers:{Authorization:token}}).then(function(response){if(response.ok){response.json().then(function(response){_this2.setState({contacts:_toConsumableArray(response.contacts),fetching:false});});}else{console.log(response.code);}});}},{key:\"render\",value:function render(){var _this3=this;if(this.state.contacts.length===0&&!this.state.fetching){return/*#__PURE__*/React.createElement(\"div\",{className:classes.message},/*#__PURE__*/React.createElement(\"h1\",null,\" No Contacts here!\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Add new by clicking on Add in NavBar!\"));}if(!this.state.fetching){return/*#__PURE__*/React.createElement(\"div\",{className:classes.main},/*#__PURE__*/React.createElement(\"div\",{className:classes.contactspage},/*#__PURE__*/React.createElement(\"div\",{className:classes.leftdiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.sidebar},this.state.contacts.map(function(contact,index){return/*#__PURE__*/React.createElement(Contactitem,{key:index,id:index,name:contact.name,lastname:contact.lastname,phone:contact.phone,changemode:_this3.changemode});}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.rightdiv},/*#__PURE__*/React.createElement(Route,{path:\"/contacts/:id\",render:function render(props){return/*#__PURE__*/React.createElement(ContactItemDetailed,Object.assign({},props,{contacts:_this3.state.contacts,deleteById:_this3.deleteById,updateContact:_this3.updateContact}));}}))));}else{return/*#__PURE__*/React.createElement(\"div\",{style:{height:\"90vh\",color:\"grey\",textAlign:\"center\",backgroundColor:\"rgba(230, 228, 228, 0.738)\",borderRadius:\"5px\",display:\"flex\",alignItems:\"center\"}},/*#__PURE__*/React.createElement(\"b\",{style:{margin:\"150px auto\"}},\"Loading...\"));}}}]);return ContactPage;}(React.Component);export default withRouter(ContactPage);","map":{"version":3,"sources":["/Users/sheygam/contactsapp-web/contacts/JAVA37/REACT/CONTACTS/src/components/contact-page-component/contact-page.js"],"names":["React","withRouter","Route","ContactItemDetailed","Contactitem","classes","BASE_URL","ContactPage","state","contacts","fetching","deleteById","token","id","fetch","method","headers","Authorization","then","response","ok","json","props","history","push","getAllContacts","console","log","code","updateContact","contact","req","JSON","stringify","body","status","localStorage","getItem","setState","length","message","main","contactspage","leftdiv","sidebar","map","index","name","lastname","phone","changemode","rightdiv","height","color","textAlign","backgroundColor","borderRadius","display","alignItems","margin","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {withRouter, Route} from 'react-router-dom';\n\n\nimport ContactItemDetailed from '../contact-item-detailed-component/contact-item-detailed';\nimport Contactitem from '../contact-item-component/contact-item';\nimport classes from '../contact-page-component/contact-page.module.css';\n\n\n\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass ContactPage extends React.Component{\n\n    state = {\n        contacts: [],\n        fetching:true\n    }\n\n    componentDidMount(){\n        if(!localStorage.getItem('token')){ \n            this.props.history.push('/login');\n        }else{\n            this.getAllContacts(localStorage.getItem('token'));\n        }\n    }\n\n    getAllContacts(token){\n        return fetch(`${BASE_URL}/api/contact`,{\n            method:'GET',\n            headers:{\n                Authorization:token\n            }\n        }).then(response => {\n            if(response.ok){\n                response.json().then((response) => {\n                    this.setState({contacts:[...response.contacts], fetching:false});\n                })\n            }else{\n                console.log(response.code);\n            }\n        });\n    }\n\n    deleteById = (token, id) => {\n        return fetch(`${BASE_URL}/api/contact/${id}`,{\n            method: 'DELETE',\n            headers: {\n                Authorization:token\n            }\n        }).then(response => {\n            if(response.ok){         \n                response.json().then((response) => {\n                    this.props.history.push('/contacts');\n                    this.getAllContacts(token);\n                }) \n            }else{\n                this.props.history.push('/contacts');\n                console.log(response.code);\n            }\n            \n        });\n    }\n\n    updateContact = (token, contact, id) => {\n        let req = JSON.stringify(contact);\n        console.log('UPDATE CONTACT:', req);\n        return fetch(`${BASE_URL}/api/contact`, {\n            method:\"PUT\",\n            headers:{\n                'Content-Type':'application/json; charset=utf-8',\n                Authorization:token\n            },\n            body:req\n        }).then(response => {\n            if(response.ok){\n                console.log('CONTACT UPDATED!', response.status);\n                this.props.history.push(`/contacts/${id}`);\n                this.getAllContacts(token);\n\n            }else{\n                console.log(response.code);\n            }\n            \n        })\n    }\n\n\n    render(){\n        if(this.state.contacts.length === 0 && !this.state.fetching){\n            return (\n            <div className={classes.message}>\n                <h1> No Contacts here!</h1>\n                <h2>Add new by clicking on Add in NavBar!</h2>\n            </div>\n            );\n        }\n        if(!this.state.fetching){\n            return(<div className={classes.main}>\n                <div className={classes.contactspage}>\n                    \n                    <div className={classes.leftdiv}>\n                        <div className={classes.sidebar}>\n                        {this.state.contacts.map((contact, index) => {\n                            return (<Contactitem key={index} id={index} name={contact.name} lastname={contact.lastname} phone={contact.phone} changemode={this.changemode}/>);\n                        })}\n                        </div>\n                    </div>\n                    <div className={classes.rightdiv}>\n                        <Route path='/contacts/:id' render={(props) => { return <ContactItemDetailed {...props} contacts={this.state.contacts} deleteById={this.deleteById} updateContact ={this.updateContact}/>}}/>\n                    </div>\n                </div>\n            </div>);\n        }else{\n            return(<div style={{height:\"90vh\", color: \"grey\", textAlign:\"center\", backgroundColor:\"rgba(230, 228, 228, 0.738)\", borderRadius:\"5px\", display:\"flex\", alignItems:\"center\"}}><b style={{margin:\"150px auto\"}}>Loading...</b></div>);\n        }\n    }\n}\n\nexport default withRouter(ContactPage);\n"]},"metadata":{},"sourceType":"module"}