{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/components/contact-page-component/contact-page.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Context } from '../../App';\nimport Contactitem from '../contact-item-component/contact-item';\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      isfetch: false\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('token')) {\n      this.props.history.push('/login');\n    } else {\n      this.setState({\n        contacts: this.getAllContacts(localStorage.getItem('token'))\n      });\n    }\n  }\n\n  getAllContacts(token) {\n    return fetch(`${BASE_URL}/api/contact`, {\n      method: 'GET',\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(response => {\n          console.log('GETALLCONTACTS: ', response.contacts);\n          return response.contacts;\n        });\n      } else {\n        throw new Error(response.status);\n      }\n    });\n  }\n\n  render() {\n    if (this.state.contacts) {\n      console.log(this.state.contacts);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, this.state.contacts.map((contact, index) => {\n        return /*#__PURE__*/React.createElement(Contactitem, {\n          key: index,\n          id: contact.id,\n          name: contact.item,\n          phone: contact.phone,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        });\n      }), \";\");\n    }\n  }\n\n}\n\nexport default withRouter(ContactPage);","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/components/contact-page-component/contact-page.js"],"names":["React","withRouter","Context","Contactitem","BASE_URL","ContactPage","Component","constructor","props","state","contacts","isfetch","componentDidMount","localStorage","getItem","history","push","setState","getAllContacts","token","fetch","method","headers","Authorization","then","response","ok","json","console","log","Error","status","render","map","contact","index","id","item","phone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AAEA,MAAMC,QAAQ,GAAG,uCAAjB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAIlBC,KAJkB,GAIV;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,OAAO,EAAC;AAFJ,KAJU;AAEjB;;AAODC,EAAAA,iBAAiB,GAAE;AACf,QAAG,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAkC;AAC9B,WAAKN,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,KAFD,MAEK;AACD,WAAKC,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAE,KAAKQ,cAAL,CAAoBL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AAAX,OAAd;AACH;AACJ;;AAEDI,EAAAA,cAAc,CAACC,KAAD,EAAO;AACjB,WAAOC,KAAK,CAAE,GAAEhB,QAAS,cAAb,EAA2B;AACnCiB,MAAAA,MAAM,EAAC,KAD4B;AAEnCC,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAACJ;AADV;AAF2B,KAA3B,CAAL,CAKJK,IALI,CAKCC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACXD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBC,QAAD,IAAc;AAC/BG,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,QAAQ,CAACf,QAAzC;AACA,iBAAOe,QAAQ,CAACf,QAAhB;AACH,SAHD;AAIH,OALD,MAKK;AACD,cAAM,IAAIoB,KAAJ,CAAUL,QAAQ,CAACM,MAAnB,CAAN;AACH;AACJ,KAdM,CAAP;AAeH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKvB,KAAL,CAAWC,QAAd,EAAuB;AACnBkB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWC,QAAvB;AACA,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWC,QAAX,CAAoBuB,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,4BAAQ,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,KAAlB;AAAyB,UAAA,EAAE,EAAED,OAAO,CAACE,EAArC;AAAyC,UAAA,IAAI,EAAEF,OAAO,CAACG,IAAvD;AAA6D,UAAA,KAAK,EAAEH,OAAO,CAACI,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,OAFA,CADL,MADA;AAOH;AAEJ;;AAhDoC;;AAmDzC,eAAerC,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Context } from '../../App';\nimport Contactitem from '../contact-item-component/contact-item';\n\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nclass ContactPage extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        contacts: [],\n        isfetch:false\n    }\n\n    componentDidMount(){\n        if(!localStorage.getItem('token')){ \n            this.props.history.push('/login');\n        }else{\n            this.setState({contacts: this.getAllContacts(localStorage.getItem('token'))});\n        }\n    }\n\n    getAllContacts(token){\n        return fetch(`${BASE_URL}/api/contact`,{\n            method:'GET',\n            headers:{\n                Authorization:token\n            }\n        }).then(response => {\n            if(response.ok){\n                response.json().then((response) => {\n                    console.log('GETALLCONTACTS: ', response.contacts);\n                    return response.contacts;\n                })\n            }else{\n                throw new Error(response.status);\n            }\n        });\n    }\n\n    render(){\n        if(this.state.contacts){\n            console.log(this.state.contacts);\n            return(\n            <div>\n                {this.state.contacts.map((contact, index) => {\n                    return (<Contactitem key={index} id={contact.id} name={contact.item} phone={contact.phone}/>);\n                })};\n            </div>\n            );\n        }\n        \n    }\n}\n\nexport default withRouter(ContactPage);"]},"metadata":{},"sourceType":"module"}