{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/components_new/post-page/post-page.js\";\nimport React from 'react';\nimport { Contextt } from '../../App';\nimport classes from '../post-page/post-page.module.css';\nimport Postinfo from '../postinfo/postinfo';\nimport Postcomments from '../postcomments/postcomments';\nimport Commentinput from '../comment-input/comment-input';\n\nreturnid = id => {\n  for (let i = 0; i < this.state.posts.length; i++) {\n    if (this.state.posts[i].postId === id) {\n      return i;\n    }\n  }\n};\n\nexport default (props => {\n  let corrent_id = returnid(props.match.params.id);\n  return /*#__PURE__*/React.createElement(Contextt.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, obj => {\n    console.log(obj);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Postinfo, {\n      id: obj.posts[corrent_id].postId,\n      author: obj.posts[corrent_id].author,\n      date: obj.posts[corrent_id].date,\n      disc: obj.posts[corrent_id].content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \"Comments\"), obj.posts[corrent_id].comments.map((e, i) => /*#__PURE__*/React.createElement(Postcomments, {\n      key: i,\n      author: e.author,\n      text: e.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(Commentinput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }));\n  });\n});","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/components_new/post-page/post-page.js"],"names":["React","Contextt","classes","Postinfo","Postcomments","Commentinput","returnid","id","i","state","posts","length","postId","props","corrent_id","match","params","obj","console","log","author","date","content","comments","map","e","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEAC,QAAQ,GAAIC,EAAD,IAAQ;AACf,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAApC,EAA4CH,CAAC,EAA7C,EAAgD;AAC9C,QAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,CAAjB,EAAoBI,MAApB,KAA+BL,EAAlC,EAAqC;AACnC,aAAOC,CAAP;AACD;AACF;AACJ,CAND;;AAQA,gBAAgBK,KAAD,IAAW;AACtB,MAAIC,UAAU,GAAGR,QAAQ,CAACO,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBT,EAApB,CAAzB;AACA,sBACI,oBAAC,QAAD,CAAU,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESU,GAAD,IAAS;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,wBAAO,uDACH,oBAAC,QAAD;AACI,MAAA,EAAE,EAAEA,GAAG,CAACP,KAAJ,CAAUI,UAAV,EAAsBF,MAD9B;AAEI,MAAA,MAAM,EAAEK,GAAG,CAACP,KAAJ,CAAUI,UAAV,EAAsBM,MAFlC;AAGI,MAAA,IAAI,EAAEH,GAAG,CAACP,KAAJ,CAAUI,UAAV,EAAsBO,IAHhC;AAII,MAAA,IAAI,EAAEJ,GAAG,CAACP,KAAJ,CAAUI,UAAV,EAAsBQ,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPG,EAQFL,GAAG,CAACP,KAAJ,CAAUI,UAAV,EAAsBS,QAAtB,CAA+BC,GAA/B,CAAmC,CAACC,CAAD,EAAIjB,CAAJ,kBAAW,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAnB;AAAsB,MAAA,MAAM,EAAEiB,CAAC,CAACL,MAAhC;AAAwC,MAAA,IAAI,EAAEK,CAAC,CAACC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,CARE,eASH,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATG,CAAP;AAYH,GAhBT,CADJ;AAqBH,CAvBD","sourcesContent":["import React from 'react';\nimport { Contextt } from '../../App';\nimport classes from '../post-page/post-page.module.css';\nimport Postinfo from '../postinfo/postinfo';\nimport Postcomments from '../postcomments/postcomments';\nimport Commentinput from '../comment-input/comment-input';\n\nreturnid = (id) => {\n    for(let i = 0; i < this.state.posts.length; i++){\n      if(this.state.posts[i].postId === id){\n        return i;\n      }\n    }\n}\n\nexport default (props) => {\n    let corrent_id = returnid(props.match.params.id);\n    return(\n        <Contextt.Consumer>\n            {\n                (obj) => {\n                    console.log(obj);\n                    return(<>\n                        <Postinfo  \n                            id={obj.posts[corrent_id].postId}\n                            author={obj.posts[corrent_id].author}\n                            date={obj.posts[corrent_id].date}\n                            disc={obj.posts[corrent_id].content}\n                        />\n                        <h2>Comments</h2>\n                        {obj.posts[corrent_id].comments.map((e, i) =>  <Postcomments key={i} author={e.author} text={e.text}/>)}\n                        <Commentinput/>\n                        </>\n                    );\n                }\n            }\n        </Contextt.Consumer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}