{"ast":null,"code":"var _jsxFileName = \"/Users/kurtcobain/JAVA37/REACT/SRC/src/counter.js\";\nimport React from 'react';\nexport default function Return(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Counter, {\n    min: props.min,\n    max: props.max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }));\n}\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: this.props.min,\n      min: this.props.min,\n      max: this.props.max,\n      error: false,\n      errnum: null\n    };\n  }\n\n  inc() {\n    if (this.state.count !== this.state.max) {\n      let newState = { ...this.state\n      };\n      newState.count++;\n      this.setState(newState);\n    }\n  }\n\n  dec() {\n    if (this.state.count !== this.state.min) {\n      let newState = { ...this.state\n      };\n      newState.count--;\n      this.setState(newState);\n    }\n  }\n\n  eql(int) {\n    if (int <= this.state.max && int >= this.state.min) {\n      let newState = { ...this.state\n      };\n      newState.count = int;\n      newState.error = false;\n      newState.errnum = null;\n      this.setState(newState);\n    } else {\n      this.iferror(int);\n    }\n  }\n\n  iferror(errnum) {\n    let newstate = { ...this.state\n    };\n    newstate.error = true;\n    newstate.errnum = errnum;\n    this.setState(newstate);\n  }\n\n  render() {\n    // if(this.state.count !== this.props.min) this.eql(this.props.min);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, !this.state.error ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }\n    }, \"REACT Counter\") : /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 62\n      }\n    }, \" Can't set \", this.state.errnum, \" (Check min and max)\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.dec.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.count,\n      onChange: e => this.eql(Number(e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.inc.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"+\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/kurtcobain/JAVA37/REACT/SRC/src/counter.js"],"names":["React","Return","props","min","max","Counter","Component","state","count","error","errnum","inc","newState","setState","dec","eql","int","iferror","newstate","render","color","bind","e","Number","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nexport default function Return(props){\n    return (\n        <>\n            <Counter min={props.min} max={props.max}/>\n        </>\n    );\n}\n\nclass Counter extends React.Component{\n    state = {\n        count: this.props.min,\n        min: this.props.min,\n        max: this.props.max,\n        error: false,\n        errnum: null\n    }\n    inc(){\n        if(this.state.count !== this.state.max){\n            let newState = {...this.state};\n            newState.count++;\n            this.setState(newState);\n        }\n    }\n    dec(){\n        if(this.state.count !== this.state.min){\n            let newState = {...this.state};\n            newState.count--;\n            this.setState(newState);\n        }\n    }\n    eql(int){\n        if(int <= this.state.max && int >= this.state.min){\n            let newState = {...this.state};\n            newState.count = int;\n            newState.error = false;\n            newState.errnum = null;\n            this.setState(newState);\n        }else{\n            this.iferror(int);\n        }\n    }\n\n    iferror(errnum){\n        let newstate = {...this.state};\n        newstate.error = true;\n        newstate.errnum = errnum;\n        this.setState(newstate);\n    }\n\n    render(){\n        // if(this.state.count !== this.props.min) this.eql(this.props.min);\n        return(\n        <div className='main'>\n            {!this.state.error ? (<h2>REACT Counter</h2>) : (<h2 style={{color:'red'}}> Can't set {this.state.errnum} (Check min and max)</h2>)}\n            <button className='btn' onClick={this.dec.bind(this)}>-</button>\n            <input type='number' value={this.state.count} onChange={(e) => this.eql(Number(e.target.value))}/>\n            <button className='btn' onClick={this.inc.bind(this)}>+</button>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}